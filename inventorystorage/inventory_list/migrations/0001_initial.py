# Generated by Django 3.1.3 on 2020-11-15 11:44

from django.db import migrations, models
import django.db.models.deletion
import inventory_list.models
import time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.BigIntegerField(default=time.time)),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'adminka_help',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.BigIntegerField(default=time.time)),
                ('data', models.TextField()),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_list.item')),
            ],
        ),
        migrations.CreateModel(
            name='M2mInventoryToUser',
            fields=[
                ('item_id', models.AutoField(db_column='info_id', primary_key=True, serialize=False)),
                ('is_returned', models.BooleanField(default=False)),
                ('return_time', models.BigIntegerField()),
                ('has_to_be_returned', models.BigIntegerField(default=inventory_list.models.get_return_time)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory_list.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.user')),
            ],
            options={
                'db_table': 'm2m_inventory_to_user',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='belongs_to',
            field=models.ManyToManyField(related_name='items', through='inventory_list.M2mInventoryToUser', to='users.User'),
        ),
    ]
